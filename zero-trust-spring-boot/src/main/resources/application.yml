# ============================================================================
# Zero Trust Spring Boot Application Configuration - SECURE
# src/main/resources/application.yml
# ============================================================================

server:
  port: 8080
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never

spring:
  application:
    name: zero-trust-app
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}

# ============================================================================
# JWT CONFIGURATION - ZERO TRUST (SIN SECRETS HARDCODEADOS)
# ============================================================================
app:
  security:
    require-auth-for-health-endpoints: false  # Por defecto, health/info son p√∫blicos
  jwt:
    # ‚ùå NO M√ÅS SECRETS HARDCODEADOS
    # ‚úÖ Solo configuraciones no-sensibles tienen defaults
    accessTokenDuration: PT15M
    refreshTokenDuration: P7D
    issuer: zero-trust-app
    enableRefreshTokenRotation: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,configprops
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.example.zerotrust: DEBUG
    org.springframework: INFO

---
# ============================================================================
# PERFIL DE DESARROLLO (con Vault local)
# ============================================================================
spring:
  config:
    activate:
      on-profile: development
    import: "optional:vault://secret/zero-trust-app"  # OPCIONAL en dev

  cloud:
    vault:
      enabled: true
      host: ${VAULT_HOST:localhost}
      port: ${VAULT_PORT:8200}
      scheme: ${VAULT_SCHEME:http}
      token: ${VAULT_TOKEN:dev-root-token}
      authentication: TOKEN
      kv:
        enabled: true
        backend: secret
        default-context: zero-trust-app
      # ‚úÖ En desarrollo puede ser m√°s permisivo
      fail-fast: false

  datasource:
    url: jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    open-in-view: false

  h2:
    console:
      enabled: true
      path: /h2-console

# ‚úÖ Configuraci√≥n de seguridad para desarrollo
app:
  security:
    require-auth-for-health-endpoints: false
  jwt:
    # ‚úÖ EN DESARROLLO: Secret de fallback SOLO si Vault no est√° disponible
    # üö® NUNCA en producci√≥n
    secret: ${VAULT_JWT_SECRET:zero-trust-dev-fallback-secret-key-must-be-at-least-64-characters-for-development-only}

logging:
  level:
    org.springframework.cloud.vault: DEBUG
    org.springframework.vault: DEBUG

---
# ============================================================================
# PERFIL DE TEST (sin Vault - para tests unitarios)
# ============================================================================
spring:
  config:
    activate:
      on-profile: test
    # NO import - sin Vault en tests unitarios

  cloud:
    vault:
      enabled: false

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop

  h2:
    console:
      enabled: false

# ‚úÖ Configuraci√≥n de seguridad para test normal
app:
  security:
    require-auth-for-health-endpoints: false
  jwt:
    # ‚úÖ Secret de test fijo (solo para tests unitarios)
    secret: zero-trust-test-secret-key-must-be-at-least-64-characters-long-for-unit-tests-only

---
# ============================================================================
# PERFIL DE TEST CON SEGURIDAD (para tests de seguridad)
# ============================================================================
spring:
  config:
    activate:
      on-profile: test-security

  cloud:
    vault:
      enabled: false
    bootstrap:
      enabled: false
    config:
      enabled: false

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false

  h2:
    console:
      enabled: false

  security:
    user:
      name: testuser
      password: testpass
      roles: USER

# ‚úÖ Configuraci√≥n de seguridad para tests de seguridad
app:
  security:
    require-auth-for-health-endpoints: true  # Auth requerido en tests de seguridad
  jwt:
    secret: zero-trust-test-security-secret-key-must-be-at-least-64-characters-for-security-tests

logging:
  level:
    org.springframework.security: DEBUG

---
# ============================================================================
# PERFIL DE PRODUCCI√ìN (con Vault OBLIGATORIO)
# ============================================================================
spring:
  config:
    activate:
      on-profile: production
    import: "vault://secret/zero-trust-app"  # OBLIGATORIO en prod

  cloud:
    vault:
      enabled: true
      host: ${VAULT_HOST:vault}
      port: ${VAULT_PORT:8200}
      scheme: ${VAULT_SCHEME:http}
      token: ${VAULT_TOKEN} # OBLIGATORIO desde env var
      authentication: TOKEN
      kv:
        enabled: true
        backend: secret
        default-context: zero-trust-app
      # ‚úÖ FAIL FAST en producci√≥n - no arrancar sin Vault
      fail-fast: true

  datasource:
    # ‚úÖ TODO desde Vault - sin fallbacks
    url: jdbc:postgresql://${app.database.host:db}:${app.database.port:5432}/${app.database.name:zerotrust}
    # ‚úÖ Credenciales vienen via @ConfigurationProperties desde Vault
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate  # NO auto-DDL en prod
    show-sql: false

  h2:
    console:
      enabled: false

# ‚úÖ Configuraci√≥n de seguridad para producci√≥n
app:
  security:
    require-auth-for-health-endpoints: false  # P√∫blicos para load balancers/monitoring
  jwt:
  # ‚ùå NO SECRET AQU√ç - viene 100% de Vault via JwtProperties
  # Si no hay secret en Vault, la aplicaci√≥n NO ARRANCA (fail-fast)

server:
  ssl:
    enabled: ${SSL_ENABLED:false}

logging:
  level:
    com.example.zerotrust: INFO
    org.springframework: WARN
    # ‚úÖ NUNCA logear secrets en producci√≥n
    org.springframework.vault: WARN