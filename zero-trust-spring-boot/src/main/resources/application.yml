# Zero Trust Spring Boot Application Configuration
server:
  port: 8080
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never

spring:
  application:
    name: zero-trust-app
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}

  # NO import aquí - se mueve a perfiles específicos

# Configuración JWT por defecto (development)
app:
  security:
    require-auth-for-health-endpoints: false  # Por defecto, health/info son públicos
  jwt:
    secret: zero-trust-default-secret-key-change-in-production-must-be-at-least-64-characters
    access-token-duration: PT15M
    refresh-token-duration: P7D
    issuer: zero-trust-app
    enable-refresh-token-rotation: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,configprops
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.example.zerotrust: DEBUG
    org.springframework: INFO

---
# PERFIL DE DESARROLLO (con Vault local)
spring:
  config:
    activate:
      on-profile: development
    import: "optional:vault://secret/zero-trust-app"  # <- OPCIONAL

  cloud:
    vault:
      enabled: true
      host: ${VAULT_HOST:localhost}
      port: ${VAULT_PORT:8200}
      scheme: ${VAULT_SCHEME:http}
      token: ${VAULT_TOKEN:dev-root-token}
      authentication: TOKEN
      kv:
        enabled: true
        backend: secret
        default-context: zero-trust-app

  datasource:
    url: jdbc:h2:mem:devdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    open-in-view: false

  h2:
    console:
      enabled: true
      path: /h2-console

# Configuración de seguridad para desarrollo (health/info públicos)
app:
  security:
    require-auth-for-health-endpoints: false

logging:
  level:
    org.springframework.cloud.vault: DEBUG
    org.springframework.vault: DEBUG

---
# PERFIL DE TEST (sin Vault)
spring:
  config:
    activate:
      on-profile: test
    # NO import - sin Vault en tests

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop

  h2:
    console:
      enabled: false

# Configuración de seguridad para test normal (health/info públicos)
app:
  security:
    require-auth-for-health-endpoints: false
  jwt:
    secret: zero-trust-test-secret-key-must-be-at-least-64-characters-long-for-tests

---
# PERFIL DE TEST CON SEGURIDAD (para tests de seguridad)
spring:
  config:
    activate:
      on-profile: test-security

  cloud:
    vault:
      enabled: false
    bootstrap:
      enabled: false
    config:
      enabled: false

  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false

  h2:
    console:
      enabled: false

  security:
    user:
      name: testuser
      password: testpass
      roles: USER

# Configuración de seguridad para tests de seguridad (health/info requieren auth)
app:
  security:
    require-auth-for-health-endpoints: true  # ← Aquí está la diferencia clave
  jwt:
    secret: zero-trust-test-secret-key-must-be-at-least-64-characters-long-for-tests

logging:
  level:
    org.springframework.security: DEBUG

---
# PERFIL DE PRODUCCIÓN (con Vault obligatorio)
spring:
  config:
    activate:
      on-profile: production
    import: "vault://secret/zero-trust-app"  # <- OBLIGATORIO en prod

  cloud:
    vault:
      enabled: true
      host: vault
      port: 8200
      scheme: http
      token: ${VAULT_TOKEN}
      authentication: TOKEN
      kv:
        enabled: true
        backend: secret
        default-context: zero-trust-app

  datasource:
    url: jdbc:postgresql://${vault.secret.database.host:localhost}:${vault.secret.database.port:5432}/${vault.secret.database.name:zerotrust}
    username: ${vault.secret.database.username:zerotrust}
    password: ${vault.secret.database.password:secure_password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

  h2:
    console:
      enabled: false

# Configuración de seguridad para producción (health/info públicos para monitoring)
app:
  security:
    require-auth-for-health-endpoints: false  # ← CAMBIADO: Públicos para load balancers/monitoring
  jwt:
    secret: ${vault.secret.jwt.secret}

server:
  ssl:
    enabled: false

logging:
  level:
    com.example.zerotrust: INFO
    org.springframework: WARN