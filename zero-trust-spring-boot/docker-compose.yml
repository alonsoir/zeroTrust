version: '3.8'

services:
  zero-trust-app:
    build: .
    container_name: zero-trust-app
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: development
      DB_HOST: postgres
      DB_USERNAME: zerotrust
      DB_PASSWORD: secure_password
      REDIS_HOST: redis
      REDIS_PASSWORD: redis_password
      KAFKA_SERVERS: kafka:9092
      JWT_SECRET: development-jwt-secret-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_started
    networks:
      - zero-trust-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: zero-trust-postgres
    environment:
      POSTGRES_DB: zerotrust
      POSTGRES_USER: zerotrust
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zero-trust-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zerotrust -d zerotrust"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: zero-trust-redis
    command: redis-server --requirepass redis_password --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zero-trust-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zero-trust-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - zero-trust-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: zero-trust-kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - zero-trust-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  zero-trust-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
