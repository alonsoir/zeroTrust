services:
  # HashiCorp Vault - IMAGEN CORREGIDA
  vault:
    image: hashicorp/vault:latest  # ✅ Imagen correcta
    container_name: zero-trust-vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_ROOT_TOKEN:-dev-root-token}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_API_ADDR: http://0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data  # ✅ Volumen persistente
    networks:
      - zero-trust-network
    restart: unless-stopped

  # Aplicación Zero Trust
  zero-trust-app:
    build: .
    container_name: zero-trust-app
    ports:
      - "${APP_PORT:-8080}:8080"
    environment:
      # Variables básicas
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-development}
      JAVA_OPTS: ${JAVA_OPTS}

      # Vault configuration específica
      SPRING_CLOUD_VAULT_ENABLED: ${SPRING_CLOUD_VAULT_ENABLED}
      SPRING_CLOUD_VAULT_HOST: ${SPRING_CLOUD_VAULT_HOST}
      SPRING_CLOUD_VAULT_PORT: ${SPRING_CLOUD_VAULT_PORT}
      SPRING_CLOUD_VAULT_SCHEME: ${SPRING_CLOUD_VAULT_SCHEME}
      SPRING_CLOUD_VAULT_TOKEN: ${SPRING_CLOUD_VAULT_TOKEN}
      SPRING_CLOUD_VAULT_AUTHENTICATION: ${SPRING_CLOUD_VAULT_AUTHENTICATION}
      SPRING_CLOUD_VAULT_KV_ENABLED: ${SPRING_CLOUD_VAULT_KV_ENABLED}
      SPRING_CLOUD_VAULT_KV_BACKEND: ${SPRING_CLOUD_VAULT_KV_BACKEND}
      SPRING_CLOUD_VAULT_KV_DEFAULT_CONTEXT: ${SPRING_CLOUD_VAULT_KV_DEFAULT_CONTEXT}
    depends_on:
      - postgres
      - redis
      - vault
    networks:
      - zero-trust-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: zero-trust-postgres
    environment:
      POSTGRES_DB: zerotrust
      POSTGRES_USER: zerotrust
      POSTGRES_PASSWORD: secure_password
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zero-trust-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: zero-trust-redis
    command: redis-server --requirepass redis_password
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - zero-trust-network
    restart: unless-stopped

volumes:
  vault_data:  # ✅ Agregar volumen
  postgres_data:
  redis_data:

networks:
  zero-trust-network:
    driver: bridge